{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)7_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "contracts/LiquidityPool.sol:LiquidityPool": {
        "src": "contracts/LiquidityPool.sol:4",
        "version": {
          "withMetadata": "c91b62fac7aea16b73ebbddad338b36783b6342142832cc36c4917148065c52e",
          "withoutMetadata": "3ffc6eb8001d2b8bfed7a97df2f19426905314e874c6c8ec63c140fcfa1188e0",
          "linkedWithoutMetadata": "3ffc6eb8001d2b8bfed7a97df2f19426905314e874c6c8ec63c140fcfa1188e0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "extract(uint256)",
          "getBalance()",
          "borrow(uint256)",
          "repay()",
          "getMyDebt()",
          "setCreditScore(address,uint8)",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LiquidityPool",
            "src": "contracts/LiquidityPool.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "LiquidityPool",
              "src": "contracts/LiquidityPool.sol:5"
            },
            {
              "label": "totalFunds",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LiquidityPool",
              "src": "contracts/LiquidityPool.sol:6"
            },
            {
              "label": "locked",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "LiquidityPool",
              "src": "contracts/LiquidityPool.sol:7"
            },
            {
              "label": "userDebt",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LiquidityPool",
              "src": "contracts/LiquidityPool.sol:10"
            },
            {
              "label": "creditScore",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "LiquidityPool",
              "src": "contracts/LiquidityPool.sol:12"
            },
            {
              "label": "borrowTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LiquidityPool",
              "src": "contracts/LiquidityPool.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/LiquidityPoolV1.sol:LiquidityPoolV1": {
        "src": "contracts/LiquidityPoolV1.sol:6",
        "version": {
          "withMetadata": "5e2dea133cc155c20959295e9e2b7530c618bc7087ccf172f530e809f95633a4",
          "withoutMetadata": "f5e755bb1dd55ac93c179eb3e45534bb1eaa6ce9ea6ecd411ff65681c98a357a",
          "linkedWithoutMetadata": "f5e755bb1dd55ac93c179eb3e45534bb1eaa6ce9ea6ecd411ff65681c98a357a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "()",
          "extract(uint256)",
          "getBalance()",
          "borrow(uint256)",
          "repay()",
          "getMyDebt()",
          "setCreditScore(address,uint8)",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "LiquidityPoolV1",
              "src": "contracts/LiquidityPoolV1.sol:7"
            },
            {
              "label": "totalFunds",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LiquidityPoolV1",
              "src": "contracts/LiquidityPoolV1.sol:8"
            },
            {
              "label": "locked",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "LiquidityPoolV1",
              "src": "contracts/LiquidityPoolV1.sol:9"
            },
            {
              "label": "userDebt",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LiquidityPoolV1",
              "src": "contracts/LiquidityPoolV1.sol:11"
            },
            {
              "label": "creditScore",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "LiquidityPoolV1",
              "src": "contracts/LiquidityPoolV1.sol:12"
            },
            {
              "label": "borrowTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LiquidityPoolV1",
              "src": "contracts/LiquidityPoolV1.sol:13"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)7_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "contracts/Lock.sol:Lock": {
        "src": "contracts/Lock.sol:7",
        "version": {
          "withMetadata": "6eb6f6b91be83cd30c6e35c880c2b5159be495650734bcf9669f85df37c7d298",
          "withoutMetadata": "32d3554bc8a13582db0b28868b0c01929a838351fd373d89fd187b5992f6da5b",
          "linkedWithoutMetadata": "32d3554bc8a13582db0b28868b0c01929a838351fd373d89fd187b5992f6da5b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Lock",
            "src": "contracts/Lock.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "unlockTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Lock",
              "src": "contracts/Lock.sol:8"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "Lock",
              "src": "contracts/Lock.sol:9"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    }
  ]
}